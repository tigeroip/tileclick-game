{"version":3,"sources":["D:/repos/dev/tileclick-game/tileclick-game/containers\\Gameboard.js"],"names":["Gameboard","props","handleClick","isActive","socket","emit","starttime","state","hit","Date","now","setState","activetile","score","opponentscore","on","data","tiles","map","tile","renderTiles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;IAGqBA,S;;;AACjB,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA,0HACRA,KADQ;;AAAA,cA4BlBC,WA5BkB,GA4BJ,UAACC,QAAD,EAAc;AACxB,gBAAIA,YAAY,CAAhB,EAAmB;AACf,sBAAKF,KAAL,CAAWG,MAAX,CAAkBC,IAAlB,CAAuB,OAAvB,EAAgC,EAACC,WAAY,MAAKC,KAAL,CAAWD,SAAxB,EAAmCE,KAAKC,KAAKC,GAAL,EAAxC,EAAhC;AACA;AACA,sBAAKC,QAAL,CAAc,EAACC,YAAY,IAAb,EAAd;AACH;AACJ,SAlCiB;;AAEd,cAAKL,KAAL,GAAa;AACTD,uBAAW,IADF;AAETM,wBAAY,IAFH;AAGTC,mBAAO,CAHE;AAITC,2BAAe;AAJN,SAAb;AAFc;AAQjB;;;;4CAEmB;AAAA;;AAChB,iBAAKb,KAAL,CAAWG,MAAX,CAAkBC,IAAlB,CAAuB,OAAvB,EAAgC,IAAhC;AACA,iBAAKJ,KAAL,CAAWG,MAAX,CAAkBW,EAAlB,CAAqB,eAArB,EAAsC,UAACC,IAAD,EAAU;AAC5C,uBAAKL,QAAL,CAAc,UAAUJ,KAAV,EAAiBN,KAAjB,EAAwB;AAClC,wCACIe,IADJ;AAGA,iBAJJ;AAKH,aAND;AAOA,iBAAKf,KAAL,CAAWG,MAAX,CAAkBW,EAAlB,CAAqB,OAArB,EAA8B,UAACC,IAAD,EAAU;AACpC,uBAAKL,QAAL,CAAc,UAAUJ,KAAV,EAAiBN,KAAjB,EAAwB;AAClC,wCACIe,IADJ;AAGA,iBAJJ;AAKH,aAND;AAOH;;;sCAUa;AAAA;;AACV,gBAAMC,QAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAd;AACA,mBAAOA,MAAMC,GAAN,CAAU,UAACC,IAAD,EAAU;AACvB,oBAAI,OAAKZ,KAAL,CAAWK,UAAX,KAA0BO,IAA9B,EACI,OAAO,4DAAC,sEAAD,IAAe,KAAKA,IAApB,EAA0B,WAAU,QAApC,EAA6C,aAAa,OAAKjB,WAA/D,EAA4E,QAAQ,CAApF;AAAA;AAAA;AAAA;AAAA,kBAAP,CADJ,KAGI,OAAO,4DAAC,sEAAD,IAAe,KAAKiB,IAApB,EAA0B,QAAQ,CAAlC;AAAA;AAAA;AAAA;AAAA,kBAAP;AACP,aALM,CAAP;AAMH;;;iCAEO;AACR,mBACI;AAAA;AAAA;AAAA,wDAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,4EAAC,sEAAD,IAAe,WAAW,KAAKZ,KAAL,CAAWD,SAArC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAEI,4EAAC,uEAAD,IAAgB,OAAO,KAAKC,KAAL,CAAWM,KAAlC,EAAyC,eAAe,KAAKN,KAAL,CAAWO,aAAnE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAGI;AAAA;AAAA;AAAA,4DAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACK,yBAAKM,WAAL;AADL,iBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAmCD;;;;;;;;;EAnFoC,gD;;eAAlBpB,S;;;;;;;;;;;;;4BAAAA,S","file":"4.8a0819f50560faf0855f.hot-update.js","sourcesContent":["import { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport ComponentGame from '../components/game/Game'\r\nimport ComponentTile from '../components/game/Tile'\r\nimport ComponentScore from '../components/game/Score'\r\n\r\n\r\nexport default class Gameboard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            starttime: null,\r\n            activetile: null,\r\n            score: 0,\r\n            opponentscore: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.emit('ready', true)\r\n        this.props.socket.on('activateboard', (data) => {\r\n            this.setState(function (state, props) {\r\n                return {\r\n                 ...data\r\n                }\r\n               });\r\n        })\r\n        this.props.socket.on('score', (data) => {\r\n            this.setState(function (state, props) {\r\n                return {\r\n                 ...data\r\n                }\r\n               });\r\n        })\r\n    }\r\n\r\n    handleClick = (isActive) => {\r\n        if (isActive == 1) {\r\n            this.props.socket.emit('score', {starttime : this.state.starttime, hit: Date.now()})\r\n            // reset the gameboard\r\n            this.setState({activetile: null})\r\n        }\r\n    }\r\n\r\n    renderTiles() {\r\n        const tiles = [1,2,3,4,5,6,7,8,9];\r\n        return tiles.map((tile) => {\r\n            if (this.state.activetile === tile)\r\n                return <ComponentTile key={tile} className=\"active\" handleClick={this.handleClick} active={1}/>\r\n            else\r\n                return <ComponentTile key={tile} active={0}/>\r\n        })\r\n    }\r\n\r\n  render () {\r\n    return (\r\n        <div className=\"container\">\r\n            <ComponentGame starttime={this.state.starttime}/>\r\n            <ComponentScore score={this.state.score} opponentscore={this.state.opponentscore}/>\r\n            <div className=\"container-tiles\">\r\n                {this.renderTiles()}\r\n            </div>\r\n\r\n            <style jsx>{`\r\n                .container {\r\n                    position: absolute;\r\n                    height: 500px;\r\n                    width: 600px;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n                .container-tiles {\r\n                    display: flex;\r\n                    width: 500px;\r\n                    align-items: center;\r\n                    margin: 35px auto 0;\r\n                    flex-wrap: wrap;\r\n                }\r\n                .active {\r\n                    background: red !important;\r\n                }\r\n                .container-score {\r\n                    display: flex;\r\n                    justify-content: space-around;\r\n                    align-items: center;\r\n                    width: 100%;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./containers/Gameboard.js"],"sourceRoot":""}